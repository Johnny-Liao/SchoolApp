Ext.define("Ext.ux.form.MultiSelect",{extend:"Ext.form.field.Base",alternateClassName:"Ext.ux.Multiselect",alias:["widget.multiselect","widget.multiselectfield"],uses:["Ext.view.BoundList","Ext.form.FieldSet","Ext.ux.layout.component.form.MultiSelect","Ext.view.DragZone","Ext.view.DropZone"],ddReorder:false,appendOnly:false,displayField:"text",allowBlank:true,minSelections:0,maxSelections:Number.MAX_VALUE,blankText:"This field is required",minSelectionsText:"Minimum {0} item(s) required",maxSelectionsText:"Maximum {0} item(s) allowed",delimiter:",",componentLayout:"multiselectfield",fieldBodyCls:Ext.baseCSSPrefix+"form-multiselect-body",initComponent:function(){var a=this;a.bindStore(a.store,true);if(a.store.autoCreated){a.valueField=a.displayField="field1";if(!a.store.expanded){a.displayField="field2"}}if(!Ext.isDefined(a.valueField)){a.valueField=a.displayField}a.callParent()},bindStore:function(a,c){var d=this,e=d.store,b=d.boundList;if(e&&!c&&e!==a&&e.autoDestroy){e.destroy()}d.store=a?Ext.data.StoreManager.lookup(a):null;if(b){b.bindStore(a||null)}},onRender:function(e,a){var f=this,b,d,c;f.callParent(arguments);d=f.boundList=Ext.create("Ext.view.BoundList",{multiSelect:true,store:f.store,displayField:f.displayField,border:false});c=d.getSelectionModel();f.mon(c,{selectionChange:f.onSelectionChange,scope:f});b=f.panel=Ext.create("Ext.panel.Panel",{title:f.listTitle,tbar:f.tbar,items:[d],renderTo:f.bodyEl,layout:"fit"});b.ownerCt=f;f.setRawValue(f.rawValue)},getSubTplMarkup:function(){return""},afterRender:function(){var a=this;a.callParent();if(a.ddReorder&&!a.dragGroup&&!a.dropGroup){a.dragGroup=a.dropGroup="MultiselectDD-"+Ext.id()}if(a.draggable||a.dragGroup){a.dragZone=Ext.create("Ext.view.DragZone",{view:a.boundList,ddGroup:a.dragGroup,dragText:"{0} Item{1}"})}if(a.droppable||a.dropGroup){a.dropZone=Ext.create("Ext.view.DropZone",{view:a.boundList,ddGroup:a.dropGroup,handleNodeDrop:function(h,g,b){var c=this.view,e=c.getStore(),d=h.records,f;h.view.store.remove(d);f=e.indexOf(g);if(b==="after"){f++}e.insert(f,d);c.getSelectionModel().select(d)}})}},onSelectionChange:function(){this.checkChange()},clearValue:function(){this.setValue([])},getSubmitValue:function(){var b=this,a=b.delimiter,c=b.getValue();return Ext.isString(a)?c.join(a):c},getRawValue:function(){var b=this,a=b.boundList;if(a){b.rawValue=Ext.Array.map(a.getSelectionModel().getSelection(),function(c){return c.get(b.valueField)})}return b.rawValue},setRawValue:function(c){var b=this,a=b.boundList,d;c=Ext.Array.from(c);b.rawValue=c;if(a){d=[];Ext.Array.forEach(c,function(g){var f,e=b.store.findRecord(b.valueField,g,f,f,true,true);if(e){d.push(e)}});a.getSelectionModel().select(d,false,true)}return c},valueToRaw:function(a){return a},isEqual:function(e,d){var b=Ext.Array.from,c,a;e=b(e);d=b(d);a=e.length;if(a!==d.length){return false}for(c=0;c<a;c++){if(d[c]!==e[c]){return false}}return true},getErrors:function(b){var a=this,c=Ext.String.format,e=a.callParent(arguments),d;b=Ext.Array.from(b||a.getValue());d=b.length;if(!a.allowBlank&&d<1){e.push(a.blankText)}if(d<this.minSelections){e.push(c(a.minSelectionsText,a.minSelections))}if(d>this.maxSelections){e.push(c(a.maxSelectionsText,a.maxSelections))}return e},onDisable:function(){this.callParent();this.disabled=true;this.updateReadOnly()},onEnable:function(){this.callParent();this.disabled=false;this.updateReadOnly()},setReadOnly:function(a){this.readOnly=a;this.updateReadOnly()},updateReadOnly:function(){var b=this,a=b.boundList,c=b.readOnly||b.disabled;if(a){a.getSelectionModel().setLocked(c)}},onDestroy:function(){Ext.destroyMembers(this,"panel","boundList","dragZone","dropZone");this.callParent()}});