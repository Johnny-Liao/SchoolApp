Ext.define("Ext.ux.grid.FiltersFeature",{extend:"Ext.grid.feature.Feature",alias:"feature.filters",uses:["Ext.ux.grid.menu.ListMenu","Ext.ux.grid.menu.RangeMenu","Ext.ux.grid.filter.BooleanFilter","Ext.ux.grid.filter.DateFilter","Ext.ux.grid.filter.ListFilter","Ext.ux.grid.filter.NumericFilter","Ext.ux.grid.filter.StringFilter"],autoReload:true,filterCls:"ux-filtered-column",local:false,menuFilterText:"Filters",paramPrefix:"filter",showMenu:true,stateId:undefined,updateBuffer:500,hasFeatureEvent:false,constructor:function(a){var b=this;a=a||{};Ext.apply(b,a);b.deferredUpdate=Ext.create("Ext.util.DelayedTask",b.reload,b);b.filters=Ext.create("Ext.util.MixedCollection",false,function(c){return c?c.dataIndex:null});b.filterConfigs=a.filters},attachEvents:function(){var c=this,a=c.view,d=a.headerCt,b=c.getGridPanel();c.bindStore(a.getStore(),true);d.on("menucreate",c.onMenuCreate,c);a.on("refresh",c.onRefresh,c);b.on({scope:c,beforestaterestore:c.applyState,beforestatesave:c.saveState,beforedestroy:c.destroy});b.filters=c;b.addEvents("filterupdate")},createFilters:function(){var b=this,a=b.filterConfigs,d=b.filters.getCount(),c;if(d){c={};b.saveState(null,c)}b.removeAll();b.addFilters(Ext.isEmpty(a)?b.view.headerCt.items.items:a);if(d){b.applyState(null,c)}},onMenuCreate:function(c,b){var a=this;a.createFilters();b.on("beforeshow",a.onMenuBeforeShow,a)},onMenuBeforeShow:function(d){var c=this,b,a;if(c.showMenu){b=c.menuItem;if(!b||b.isDestroyed){c.createMenuItem(d);b=c.menuItem}a=c.getMenuFilter();if(a){b.menu=a.menu;b.setChecked(a.active);b.setDisabled(a.disabled===true)}b.setVisible(!!a);this.sep.setVisible(!!a)}},createMenuItem:function(b){var a=this;a.sep=b.add("-");a.menuItem=b.add({checked:false,itemId:"filters",text:a.menuFilterText,listeners:{scope:a,checkchange:a.onCheckChange,beforecheckchange:a.onBeforeCheck}})},getGridPanel:function(){return this.view.up("gridpanel")},applyState:function(b,d){var a,c;this.applyingState=true;this.clearFilters();if(d.filters){for(a in d.filters){c=this.filters.get(a);if(c){c.setValue(d.filters[a]);c.setActive(true)}}}this.deferredUpdate.cancel();if(this.local){this.reload()}delete this.applyingState;delete d.filters},saveState:function(a,c){var b={};this.filters.each(function(d){if(d.active){b[d.dataIndex]=d.getValue()}});return(c.filters=b)},destroy:function(){var a=this;Ext.destroyMembers(a,"menuItem","sep");a.removeAll();a.clearListeners()},removeAll:function(){if(this.filters){Ext.destroy.apply(Ext,this.filters.items);this.filters.clear()}},bindStore:function(a,b){if(!b&&this.store){if(this.local){a.un("load",this.onLoad,this)}else{a.un("beforeload",this.onBeforeLoad,this)}}if(a){if(this.local){a.on("load",this.onLoad,this)}else{a.on("beforeload",this.onBeforeLoad,this)}}this.store=a},getMenuFilter:function(){var a=this.view.headerCt.getMenu().activeHeader;return a?this.filters.get(a.dataIndex):null},onCheckChange:function(a,b){this.getMenuFilter().setActive(b)},onBeforeCheck:function(a,b){return !b||this.getMenuFilter().isActivatable()},onStateChange:function(d,b){if(d!=="serialize"){var c=this,a=c.getGridPanel();if(b==c.getMenuFilter()){c.menuItem.setChecked(b.active,false)}if((c.autoReload||c.local)&&!c.applyingState){c.deferredUpdate.delay(c.updateBuffer)}c.updateColumnHeadings();if(!c.applyingState){a.saveState()}a.fireEvent("filterupdate",c,b)}},onBeforeLoad:function(a,b){b.params=b.params||{};this.cleanParams(b.params);var c=this.buildQuery(this.getFilterData());Ext.apply(b.params,c)},onLoad:function(a,b){a.filterBy(this.getRecordFilter())},onRefresh:function(){this.updateColumnHeadings()},updateColumnHeadings:function(){var a=this,b=a.view.headerCt;if(b){b.items.each(function(d){var c=a.getFilter(d.dataIndex);d[c&&c.active?"addCls":"removeCls"](a.filterCls)})}},reload:function(){var b=this,a=b.view.getStore(),c;if(b.local){a.clearFilter(true);a.filterBy(b.getRecordFilter())}else{b.deferredUpdate.cancel();a.loadPage(1)}},getRecordFilter:function(){var c=[],a,b;this.filters.each(function(d){if(d.active){c.push(d)}});a=c.length;return function(d){for(b=0;b<a;b++){if(!c[b].validateRecord(d)){return false}}return true}},addFilter:function(a){var c=this.getFilterClass(a.type),b=a.menu?a:(new c(a));this.filters.add(b);Ext.util.Observable.capture(b,this.onStateChange,this);return b},addFilters:function(d){if(d){var b,a,c;for(b=0,a=d.length;b<a;b++){c=d[b];if(c){this.addFilter(c)}}}},getFilter:function(a){return this.filters.get(a)},clearFilters:function(){this.filters.each(function(a){a.setActive(false)})},getFilterData:function(){var c=[],b,a;this.filters.each(function(e){if(e.active){var g=[].concat(e.serialize());for(b=0,a=g.length;b<a;b++){c.push({field:e.dataIndex,data:g[b]})}}});return c},buildQuery:function(b){var a={},c,h,j,e,k,d,g=b.length;if(!this.encode){for(c=0;c<g;c++){h=b[c];j=[this.paramPrefix,"[",c,"]"].join("");a[j+"[field]"]=h.field;e=j+"[data]";for(k in h.data){a[[e,"[",k,"]"].join("")]=h.data[k]}}}else{d=[];for(c=0;c<g;c++){h=b[c];d.push(Ext.apply({},{field:h.field},h.data))}if(d.length>0){a[this.paramPrefix]=Ext.JSON.encode(d)}}return a},cleanParams:function(c){if(this.encode){delete c[this.paramPrefix]}else{var b,a;b=new RegExp("^"+this.paramPrefix+"[[0-9]+]");for(a in c){if(b.test(a)){delete c[a]}}}},getFilterClass:function(a){switch(a){case"auto":a="string";break;case"int":case"float":a="numeric";break;case"bool":a="boolean";break}return Ext.ClassManager.getByAlias("gridfilter."+a)}});